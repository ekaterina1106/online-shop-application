# version: "3.8"

services:
  backend:
    image: shop_backend
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
      search:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_ELASTICSEARCH_URIS: http://search:9200
  frontend:
    image: shop_frontend
    build:
      context: ./frontend
    ports:
      - "80:80"
    environment:
      BACKEND_HOST: backend
      BACKEND_PORT: 8080
    depends_on:
      - backend
  db:
    image: postgres:16.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
  search:
    image: elasticsearch:7.17.22
    environment:
      discovery.type: single-node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - es-data:/usr/share/elasticsearch/data

volumes:
  db-data:
  es-data: